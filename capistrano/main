set :stages, %w(staging)
set :default_stage, "staging"
require 'capistrano/ext/multistage'


set :application, "<%= var :app_name %>"

# Use Git
set :scm, :git
set :repository, "<%= var :repo %>"


# Do not use sudo.. presume auto ssh has webdev access
set :use_sudo, false

# keep a local git repo instance. 
# Each deploy, git pull changes on that and deploy from it locally.
set :deploy_via, :remote_cache

after   "deploy:setup", "bundler:install"

#standard deploy tasks
# before  "deploy:update",      "deploy:pre_deploy_warn"
after   "deploy:update_code", 'bundler:bundle_new_release'
after   "deploy:update_code", "db:setup"
after   "deploy:update_code", "deploy:migrate"
after   "deploy:update_code", "db:seed"
# before  'deploy:restart',     'sass:update'

def run_rake(task)
  run("cd #{current_release} && rake #{task} RAILS_ENV=#{rails_env}")
end

namespace :db do
  desc "Seed the database"
  task :seed, :roles => :app, :except => { :no_release => true } do
    rake_task = "db:seed"
    run("cd #{current_release} && rake #{rake_task} RAILS_ENV=#{rails_env}")
  end
end

namespace :deploy do
  desc "Warn of about to deploy"
  task :pre_deploy_warn, :roles => :app do
    puts "\n\nAbout to deploy #{rails_env}\n"
    Capistrano::CLI.ui.ask "Are you sure? (ctrl-c to abort)"
  end
end

namespace :deploy do
  desc "Restarting passenger with restart.txt"
  task :restart, :roles => :app, :except => { :no_release => true } do
    run "touch #{current_release}/tmp/restart.txt"
  end
  
  [:start, :stop].each do |t|
    desc "#{t} task is a no-op with mod_rails"
    task t, :roles => :app do ; end
  end
end

namespace :sass do
  desc 'Updates the stylesheets generated by Sass'
  task :update, :roles => :app do
    invoke_command "cd #{latest_release} && rake sass:update RAILS_ENV=#{rails_env} NO_NM=true"
  end
end

namespace :bundler do
  desc "Make sure bundler is installed"
  task :install,  :roles=>:app do
    run "gem install bundler"
  end
  
  desc "sync up latest bundle install"
  task :bundle_new_release, :roles => :app do
    run "cd #{release_path} && bundle install --without test:development:test_mac"
  end
end
